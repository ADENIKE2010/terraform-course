name: 'terraform pipeline'

on:
  push:
    branches:
      - 'main'
      - 'feature/*'

    paths:
      - 'network/**'
      - '.github/workflows/test.yml'

env:
  WORKING_DIR: ./network
  TF_VER: 1.3.0

  #
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID  }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY  }}
  AWS_REGION: us-east-1

jobs:
  tf-plan:
    name: 'terraform: init,validate,plan'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout Repo
        uses: actions/checkout@v3
 
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ env.TF_VER }}"

      - name: Run> terraform init
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform init -input=false

      - name: Run> terraform validate
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform validate

      - name: Run> terraform plan
        id: tf-plan
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform plan -detailed-exitcode -input=false
        continue-on-error: true

      - name: Check for "terraform plan" failure
        if: steps.tf-plan.outputs.exitcode == 1
        run: exit 1

    outputs:
      tf-plan-exit-code: ${{ steps.tf-plan.outputs.exitcode }}

  tf-apply:
    name: 'terraform: apply'
    runs-on: ubuntu-latest
    needs: tf-plan
    if: needs.tf-plan.outputs.tf-plan-exit-code == 2

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ env.TF_VER }}"

      - name: Run> terraform inits
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform init -input=false
    
      - name: Run> terraform validate
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform validate
  
      - name: Run> terraform apply
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform apply -auto-approve
          